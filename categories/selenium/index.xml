<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>selenium on yabzhang</title><link>https://yabzhang.github.io/categories/selenium/</link><description>Recent content in selenium on yabzhang</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 15 Jul 2023 01:35:10 +0800</lastBuildDate><atom:link href="https://yabzhang.github.io/categories/selenium/index.xml" rel="self" type="application/rss+xml"/><item><title>Playwright 笔记</title><link>https://yabzhang.github.io/posts/playwright_notes/</link><pubDate>Sat, 15 Jul 2023 01:35:10 +0800</pubDate><guid>https://yabzhang.github.io/posts/playwright_notes/</guid><description>简介 最近需要实现网页自动化操作，直接 hack 网站接口不太好搞，于是到处找 UI 操作自动化的解决方案。
一开始我在桌面系统上来解决这个事，最好支持操作的录制和重放。一通搜索发现确实有戏，Mac 系统自带了 Automator 可以完成 脚本录制 和 操作重放；Win 系统也有不少很好的桌面软件支持。看来各生态都有这类自动化的方案。
我的笔记本是 Mac ，我简单测试了 Automator 算不上完美，不过一般常见也够用。 除了支持基本 UI 交互录制，还开放了部分系统和应用的功能支持，也可以通过脚本拓展。对于个人办公场景，这套工具可以满足大部分场景，且尽可能不用编写代码。不过因为是系统绑定，以后不方便丢到 VPS 执行，也不方便服务化和规模化。
我确认过全任务流程可以调整为全部在浏览器里完成，这不就是 Web 自动化测试嘛。 提到 Web UI 自动化, 那就不得不提一下大名鼎鼎的 Selenium 了 ———— 提供了一系列与浏览器交互的接口并能模拟各种用户行为，有着庞大的开源社区生态。但近年来，微软开源的 Playwright1 同样支持与浏览器交互和用户行为模拟，且功能更为强大和便于使用。使用示例如下：
启动浏览器录制交互，实时生成交互代码 # 打开youtube页面，并开始录制操作脚本 playwright codegen https://www.youtube.com # 支持很多浏览器参数，加载原有Session, 并开始录制 playwright codegen --load-session=cookies.json https://www.youtube.com 甚至支持导出测试视频 😂 context = browser.new_context( record_video_dir=&amp;#34;videos/&amp;#34;, record_video_size={&amp;#34;width&amp;#34;: 640, &amp;#34;height&amp;#34;: 480} ) 支持加载浏览器插件 context = await playwright.chromium.launch_persistent_context( user_data_dir, headless=False, args=[ f&amp;#34;--disable-extensions-except={path_to_extension}&amp;#34;, f&amp;#34;--load-extension={path_to_extension}&amp;#34;, ], ) 支持 pytest 插件，可以方便的整合测试用例 pytest --browser webkit --headed</description></item></channel></rss>